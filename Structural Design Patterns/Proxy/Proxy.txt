________________________________________________________________________________________________________________________
Intent:
________________________________________________________________________________________________________________________
Provide a surrogate or placeholder for another object to control access to it.
- Proxy Types:
    - Virutal: creates expensive objects on demand
    - Cache: chaches expensive calls
    - Remote: simplifies client implementation
    - Protection: provides access management
    - Smart: -performs additional actions

________________________________________________________________________________________________________________________
Example Problem:
________________________________________________________________________________________________________________________

________________________________________________________________________________________________________________________
Solution: 
________________________________________________________________________________________________________________________

________________________________________________________________________________________________________________________
Components:
________________________________________________________________________________________________________________________

________________________________________________________________________________________________________________________
Pros & Cons
________________________________________________________________________________________________________________________
Pros:


Cons:

________________________________________________________________________________________________________________________
Applicability(When to use):
________________________________________________________________________________________________________________________

________________________________________________________________________________________________________________________
How to implement:
________________________________________________________________________________________________________________________
- Proxy should have the same interface as that of the real object.
- This is important because the client should not distinguish between the real subject and the poxy.
- One way to achieve this is to inherit the poxy from the same class that he real subject inherits from.
- This allows us to replace an object with proxy without significant changes.
- In C++, we can overload * and -> operator without having to implement all the methods of the real subject.
- A proxy ma create instance of the real subject.
    - it may create the object on demand
- One proxy can work with multiple subjects through an abstract interface
    - reduces coupling between classes.
    - used when the proxy provides a common implementation for all the classes.
________________________________________________________________________________________________________________________
Relations with other patterns
________________________________________________________________________________________________________________________
